services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg

    networks:
      iceberg_net:
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
      - ./spark/conf:/opt/spark/conf
      - ./spark-jars/hadoop-aws-3.3.4.jar:/opt/spark/jars/hadoop-aws-3.3.4.jar
      - ./spark-jars/aws-java-sdk-bundle-1.12.262.jar:/opt/spark/jars/aws-java-sdk-bundle-1.12.262.jar
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8086:8080
      - 10000:10000
      - 10001:10001

  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    volumes:
      - ./data/minio:/data:rw
    ports:
      - 9004:9001
      - 9005:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    image: minio/mc
    container_name: mc
    depends_on:
      - minio
    networks:
      - iceberg_net
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do
        echo '...waiting for minio...' && sleep 1;
      done;
      /usr/bin/mc mb --ignore-existing minio/warehouse;
      /usr/bin/mc anonymous set download minio/warehouse;
      tail -f /dev/null
      "

  trino:
    image: trinodb/trino
    container_name: trino
    ports:
      - "8084:8080"
    volumes:
      - ./data/trino/catalog:/etc/trino/catalog
    depends_on:
      - minio
    networks:
      iceberg_net:

  superset:
    build: .
    ports:
      - "8288:8088"
    environment:
      - SUPERSET_SECRET_KEY=xG0kRUVZXaNQcOMiDYZ8gMaVjKcTcxksHbm5eQOAbXk
      - SUPERSET_FEATURE_EMBEDDED_SUPERSET=true
      - SUPERSET_ADMIN_USERNAME=admin
      - SUPERSET_ADMIN_FIRST_NAME=Superset
      - SUPERSET_ADMIN_LAST_NAME=Admin
      - SUPERSET_ADMIN_EMAIL=admin@superset.com
      - SUPERSET_ADMIN_PASSWORD=admin
    volumes:
      - ./superset_config:/app/pythonpath

    command: >
      sh -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
        superset init &&
        superset run -p 8088 --host=0.0.0.0
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      iceberg_net:

networks:
  iceberg_net:
